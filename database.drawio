<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36 OPR/118.0.0.0" version="27.0.9">
  <diagram name="Page-1" id="bd83a815-5ea8-2e97-e5ec-87c9f400f2fa">
    <mxGraphModel dx="3135.5" dy="790" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1.5" pageWidth="1169" pageHeight="826" background="none" math="0" shadow="0">
      <root>
        <mxCell id="0" style=";html=1;" />
        <mxCell id="1" style=";html=1;" parent="0" />
        <mxCell id="iHMuQG1dZHNGiIYbz37S-1" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="990" y="220" width="100" height="420" as="geometry" />
        </mxCell>
        <mxCell id="1516e18e63f93b96-3" value="Listings" style="text;strokeColor=none;fillColor=none;html=1;fontSize=24;fontStyle=1;verticalAlign=middle;align=center;rounded=0;shadow=1;" parent="1" vertex="1">
          <mxGeometry x="-30" y="180" width="780" height="40" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-1" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="10" y="220" width="400" height="420" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-4" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="10" y="220" width="100" height="420" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-5" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="110" y="220" width="100" height="420" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-6" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="210" y="220" width="100" height="420" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-9" value="" style="endArrow=none;html=1;rounded=0;entryX=1;entryY=1;entryDx=0;entryDy=0;exitX=0;exitY=0.162;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="XJ4MXIWNUVhlBydrAuq2-16" target="XJ4MXIWNUVhlBydrAuq2-18" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="10" y="290" as="sourcePoint" />
            <mxPoint x="220" y="290" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-10" value="listing_id" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="10" y="220" width="100" height="70" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-11" value="product_id" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="110" y="220" width="100" height="70" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-12" value="company_id" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="210" y="220" width="100" height="70" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-15" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="410" y="220" width="100" height="420" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-13" value="price" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="310" y="220" width="100" height="70" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-17" value="availibility" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="410" y="220" width="100" height="70" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-16" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="510" y="220" width="100" height="420" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-18" value="url" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="510" y="220" width="100" height="70" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-21" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="790" y="220" width="100" height="420" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-24" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="610" y="220" width="100" height="420" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-19" value="" style="endArrow=none;html=1;rounded=0;entryX=1;entryY=1;entryDx=0;entryDy=0;exitX=0;exitY=0.162;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="XJ4MXIWNUVhlBydrAuq2-4" target="XJ4MXIWNUVhlBydrAuq2-31" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="10" y="288" as="sourcePoint" />
            <mxPoint x="747" y="280" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-25" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="890" y="220" width="100" height="420" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-28" value="Products" style="text;strokeColor=none;fillColor=none;html=1;fontSize=24;fontStyle=1;verticalAlign=middle;align=center;rounded=0;shadow=1;" parent="1" vertex="1">
          <mxGeometry x="790" y="180" width="400" height="40" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-29" value="product_id" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="790" y="220" width="100" height="70" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-30" value="product_name" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="890" y="220" width="100" height="70" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-31" value="sku (id in company api)&amp;nbsp;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="610" y="220" width="100" height="70" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-32" value="product_image" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="990" y="220" width="100" height="70" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-34" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1090" y="220" width="100" height="420" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-36" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1270" y="220" width="100" height="420" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-37" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1470" y="220" width="100" height="420" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-38" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1370" y="220" width="100" height="420" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-39" value="Companies" style="text;strokeColor=none;fillColor=none;html=1;fontSize=24;fontStyle=1;verticalAlign=middle;align=center;rounded=0;shadow=1;" parent="1" vertex="1">
          <mxGeometry x="1220" y="180" width="400" height="40" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-40" value="company_id" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="1270" y="220" width="100" height="70" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-41" value="company_name" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="1370" y="220" width="100" height="70" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-42" value="company_logo" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="1470" y="220" width="100" height="70" as="geometry" />
        </mxCell>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-45" value="" style="endArrow=none;html=1;rounded=0;entryX=1;entryY=1;entryDx=0;entryDy=0;" parent="1" target="XJ4MXIWNUVhlBydrAuq2-42" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1270" y="291" as="sourcePoint" />
            <mxPoint x="1570" y="290" as="targetPoint" />
            <Array as="points" />
          </mxGeometry>
        </mxCell>
        <UserObject label="# Stock &amp;amp; Product Listings API Documentation&#xa;&#xa;## Database Schema Overview&#xa;&#xa;### Product Table  &#xa;Stores unique products.&#xa;&#xa;| Field Name | Type    | Description                  |&#xa;|------------|---------|------------------------------|&#xa;| id         | string  | Unique product ID (e.g., ASIN or internal SKU) |&#xa;| sku        | string  | Product SKU                  |&#xa;| name       | string  | Product name                 |&#xa;| image_url  | string  | URL to product image         |&#xa;&#xa;---&#xa;&#xa;### Company Table  &#xa;Stores retailers/platforms like Amazon, Walmart, Best Buy.&#xa;&#xa;| Field Name   | Type    | Description                              |&#xa;|--------------|---------|------------------------------------------|&#xa;| company_id   | string  | Unique company ID (e.g., &#39;AMAZON&#39;, &#39;WALMART&#39;) |&#xa;| company_name | string  | Human-readable company name               |&#xa;| api_source   | string  | API source identifier (e.g., &#39;Amazon SP-API&#39;) |&#xa;| logo_url     | string  | URL to company logo                        |&#xa;| website_url  | string  | Official website URL                       |&#xa;&#xa;---&#xa;&#xa;### Listing Table  &#xa;Stores seller offers per product per company.&#xa;&#xa;| Field Name    | Type    | Description                                |&#xa;|---------------|---------|--------------------------------------------|&#xa;| listing_id    | int     | Unique listing ID                          |&#xa;| product_id    | string  | Foreign key to Product.id                  |&#xa;| company_id    | string  | Foreign key to Company.company_id          |&#xa;| seller_id     | string  | Seller-specific ID (optional, e.g., Amazon SellerId) |&#xa;| price         | float   | Price of the offer                         |&#xa;| availability  | string  | Availability info (e.g., &#39;In Stock&#39;, &#39;Out of Stock&#39;) |&#xa;| url           | string  | Buy URL to the seller’s product page      |&#xa;| last_updated  | datetime| Last time this listing was updated         |&#xa;&#xa;---&#xa;&#xa;## Supported APIs &amp;amp; How to Access&#xa;&#xa;### 1. Amazon (using Amazon Selling Partner API)  &#xa;- **Product info endpoint:** Get product details by ASIN/SKU  &#xa;- **Offers endpoint:** Get all sellers’ offers for a product by ASIN  &#xa;- **JSON example for product:**&#xa;&#xa;```json&#xa;{&#xa;  &quot;ASIN&quot;: &quot;B07N4M94ZP&quot;,&#xa;  &quot;Title&quot;: &quot;Nintendo Switch&quot;,&#xa;  &quot;Images&quot;: [&quot;https://m.media-amazon.com/image.jpg&quot;],&#xa;  &quot;SKU&quot;: &quot;SKU123&quot;&#xa;}&#xa;```&#xa;&#xa;- **JSON example for offers:**&#xa;&#xa;```json&#xa;{&#xa;  &quot;Offers&quot;: [&#xa;    {&#xa;      &quot;SellerId&quot;: &quot;A1SELLERID1&quot;,&#xa;      &quot;Price&quot;: 299.99,&#xa;      &quot;Availability&quot;: &quot;15 in stock&quot;,&#xa;      &quot;URL&quot;: &quot;https://amazon.com/dp/B07N4M94ZP?seller=A1SELLERID1&quot;&#xa;    },&#xa;    {&#xa;      &quot;SellerId&quot;: &quot;A1SELLERID2&quot;,&#xa;      &quot;Price&quot;: 305.00,&#xa;      &quot;Availability&quot;: &quot;5 in stock&quot;,&#xa;      &quot;URL&quot;: &quot;https://amazon.com/dp/B07N4M94ZP?seller=A1SELLERID2&quot;&#xa;    }&#xa;  ]&#xa;}&#xa;```&#xa;&#xa;---&#xa;&#xa;### 2. Walmart API  &#xa;- **Product search endpoint:** by SKU  &#xa;- **Price &amp;amp; availability:** included in product listing response  &#xa;- **JSON example:**&#xa;&#xa;```json&#xa;{&#xa;  &quot;itemId&quot;: &quot;123456&quot;,&#xa;  &quot;name&quot;: &quot;Nintendo Switch&quot;,&#xa;  &quot;price&quot;: 310.00,&#xa;  &quot;availability&quot;: &quot;In stock&quot;,&#xa;  &quot;url&quot;: &quot;https://walmart.com/ip/123456&quot;,&#xa;  &quot;image&quot;: &quot;https://walmart.com/image.jpg&quot;&#xa;}&#xa;```&#xa;&#xa;---&#xa;&#xa;### 3. Best Buy API  &#xa;- **Product lookup:** by SKU or product ID  &#xa;- **Offers:** included in product details or separate offers endpoint  &#xa;- **JSON example:**&#xa;&#xa;```json&#xa;{&#xa;  &quot;sku&quot;: &quot;654321&quot;,&#xa;  &quot;name&quot;: &quot;Nintendo Switch&quot;,&#xa;  &quot;salePrice&quot;: 315.00,&#xa;  &quot;availability&quot;: &quot;Limited Stock&quot;,&#xa;  &quot;url&quot;: &quot;https://bestbuy.com/site/654321&quot;,&#xa;  &quot;image&quot;: &quot;https://bestbuy.com/image.jpg&quot;&#xa;}&#xa;```&#xa;&#xa;---&#xa;&#xa;## Handling Multiple Sellers Per Product&#xa;&#xa;- Store one **product** row for the unique product (e.g., Nintendo Switch ASIN).&#xa;- Store one **company** row per retailer/platform (Amazon, Walmart, Best Buy).&#xa;- Store multiple **listing** rows for each seller offer on that product, linked by `product_id` and `company_id`.&#xa;- For Amazon, the `seller_id` in the listing holds the individual seller’s ID.&#xa;- Listings include price, availability, URL, and last updated time.&#xa;&#xa;---&#xa;&#xa;## Middleware Logic for Filtering and Selecting Best Offers&#xa;&#xa;- **Fetch all listings** for a product from the database.&#xa;- **Filter by availability** (exclude out-of-stock).&#xa;- **Sort by price ascending** to find cheapest offers.&#xa;- **Group by company**, pick the cheapest available offer per company.&#xa;- Return the filtered list to frontend for display.&#xa;&#xa;### Pseudo-code example:&#xa;&#xa;```python&#xa;def get_best_offers(product_id):&#xa;    listings = db.query(&quot;SELECT * FROM Listing WHERE product_id = ?&quot;, product_id)&#xa;    &#xa;    available = [l for l in listings if l.availability != &#39;Out of Stock&#39;]&#xa;    &#xa;    cheapest_per_company = {}&#xa;    for l in available:&#xa;        cid = l.company_id&#xa;        if cid not in cheapest_per_company or l.price &amp;lt; cheapest_per_company[cid].price:&#xa;            cheapest_per_company[cid] = l&#xa;    &#xa;    return list(cheapest_per_company.values())&#xa;```&#xa;&#xa;---&#xa;&#xa;## Frontend Display Notes&#xa;&#xa;- Show product details (name, image) from **Product** table.&#xa;- Show list of companies with their **cheapest available offers** (price, availability, buy link).&#xa;- Allow users to click the buy link for the best offer per company.&#xa;&#xa;---&#xa;&#xa;## Image URLs (examples)&#xa;&#xa;- Amazon logo: https://upload.wikimedia.org/wikipedia/commons/a/a9/Amazon_logo.svg  &#xa;- Walmart logo: https://upload.wikimedia.org/wikipedia/commons/c/ca/Walmart_logo.svg  &#xa;- Best Buy logo: https://upload.wikimedia.org/wikipedia/commons/5/5a/Best_Buy_Logo.svg  &#xa;&#xa;---&#xa;&#xa;# End of Documentation" link="# Stock &amp;amp; Product Listings API Documentation&#xa;&#xa;## Database Schema Overview&#xa;&#xa;### Product Table  &#xa;Stores unique products.&#xa;&#xa;| Field Name | Type    | Description                  |&#xa;|------------|---------|------------------------------|&#xa;| id         | string  | Unique product ID (e.g., ASIN or internal SKU) |&#xa;| sku        | string  | Product SKU                  |&#xa;| name       | string  | Product name                 |&#xa;| image_url  | string  | URL to product image         |&#xa;&#xa;---&#xa;&#xa;### Company Table  &#xa;Stores retailers/platforms like Amazon, Walmart, Best Buy.&#xa;&#xa;| Field Name   | Type    | Description                              |&#xa;|--------------|---------|------------------------------------------|&#xa;| company_id   | string  | Unique company ID (e.g., &#39;AMAZON&#39;, &#39;WALMART&#39;) |&#xa;| company_name | string  | Human-readable company name               |&#xa;| api_source   | string  | API source identifier (e.g., &#39;Amazon SP-API&#39;) |&#xa;| logo_url     | string  | URL to company logo                        |&#xa;| website_url  | string  | Official website URL                       |&#xa;&#xa;---&#xa;&#xa;### Listing Table  &#xa;Stores seller offers per product per company.&#xa;&#xa;| Field Name    | Type    | Description                                |&#xa;|---------------|---------|--------------------------------------------|&#xa;| listing_id    | int     | Unique listing ID                          |&#xa;| product_id    | string  | Foreign key to Product.id                  |&#xa;| company_id    | string  | Foreign key to Company.company_id          |&#xa;| seller_id     | string  | Seller-specific ID (optional, e.g., Amazon SellerId) |&#xa;| price         | float   | Price of the offer                         |&#xa;| availability  | string  | Availability info (e.g., &#39;In Stock&#39;, &#39;Out of Stock&#39;) |&#xa;| url           | string  | Buy URL to the seller’s product page      |&#xa;| last_updated  | datetime| Last time this listing was updated         |&#xa;&#xa;---&#xa;&#xa;## Supported APIs &amp;amp; How to Access&#xa;&#xa;### 1. Amazon (using Amazon Selling Partner API)  &#xa;- **Product info endpoint:** Get product details by ASIN/SKU  &#xa;- **Offers endpoint:** Get all sellers’ offers for a product by ASIN  &#xa;- **JSON example for product:**&#xa;&#xa;```json&#xa;{&#xa;  &quot;ASIN&quot;: &quot;B07N4M94ZP&quot;,&#xa;  &quot;Title&quot;: &quot;Nintendo Switch&quot;,&#xa;  &quot;Images&quot;: [&quot;https://m.media-amazon.com/image.jpg&quot;],&#xa;  &quot;SKU&quot;: &quot;SKU123&quot;&#xa;}&#xa;```&#xa;&#xa;- **JSON example for offers:**&#xa;&#xa;```json&#xa;{&#xa;  &quot;Offers&quot;: [&#xa;    {&#xa;      &quot;SellerId&quot;: &quot;A1SELLERID1&quot;,&#xa;      &quot;Price&quot;: 299.99,&#xa;      &quot;Availability&quot;: &quot;15 in stock&quot;,&#xa;      &quot;URL&quot;: &quot;https://amazon.com/dp/B07N4M94ZP?seller=A1SELLERID1&quot;&#xa;    },&#xa;    {&#xa;      &quot;SellerId&quot;: &quot;A1SELLERID2&quot;,&#xa;      &quot;Price&quot;: 305.00,&#xa;      &quot;Availability&quot;: &quot;5 in stock&quot;,&#xa;      &quot;URL&quot;: &quot;https://amazon.com/dp/B07N4M94ZP?seller=A1SELLERID2&quot;&#xa;    }&#xa;  ]&#xa;}&#xa;```&#xa;&#xa;---&#xa;&#xa;### 2. Walmart API  &#xa;- **Product search endpoint:** by SKU  &#xa;- **Price &amp;amp; availability:** included in product listing response  &#xa;- **JSON example:**&#xa;&#xa;```json&#xa;{&#xa;  &quot;itemId&quot;: &quot;123456&quot;,&#xa;  &quot;name&quot;: &quot;Nintendo Switch&quot;,&#xa;  &quot;price&quot;: 310.00,&#xa;  &quot;availability&quot;: &quot;In stock&quot;,&#xa;  &quot;url&quot;: &quot;https://walmart.com/ip/123456&quot;,&#xa;  &quot;image&quot;: &quot;https://walmart.com/image.jpg&quot;&#xa;}&#xa;```&#xa;&#xa;---&#xa;&#xa;### 3. Best Buy API  &#xa;- **Product lookup:** by SKU or product ID  &#xa;- **Offers:** included in product details or separate offers endpoint  &#xa;- **JSON example:**&#xa;&#xa;```json&#xa;{&#xa;  &quot;sku&quot;: &quot;654321&quot;,&#xa;  &quot;name&quot;: &quot;Nintendo Switch&quot;,&#xa;  &quot;salePrice&quot;: 315.00,&#xa;  &quot;availability&quot;: &quot;Limited Stock&quot;,&#xa;  &quot;url&quot;: &quot;https://bestbuy.com/site/654321&quot;,&#xa;  &quot;image&quot;: &quot;https://bestbuy.com/image.jpg&quot;&#xa;}&#xa;```&#xa;&#xa;---&#xa;&#xa;## Handling Multiple Sellers Per Product&#xa;&#xa;- Store one **product** row for the unique product (e.g., Nintendo Switch ASIN).&#xa;- Store one **company** row per retailer/platform (Amazon, Walmart, Best Buy).&#xa;- Store multiple **listing** rows for each seller offer on that product, linked by `product_id` and `company_id`.&#xa;- For Amazon, the `seller_id` in the listing holds the individual seller’s ID.&#xa;- Listings include price, availability, URL, and last updated time.&#xa;&#xa;---&#xa;&#xa;## Middleware Logic for Filtering and Selecting Best Offers&#xa;&#xa;- **Fetch all listings** for a product from the database.&#xa;- **Filter by availability** (exclude out-of-stock).&#xa;- **Sort by price ascending** to find cheapest offers.&#xa;- **Group by company**, pick the cheapest available offer per company.&#xa;- Return the filtered list to frontend for display.&#xa;&#xa;### Pseudo-code example:&#xa;&#xa;```python&#xa;def get_best_offers(product_id):&#xa;    listings = db.query(&quot;SELECT * FROM Listing WHERE product_id = ?&quot;, product_id)&#xa;    &#xa;    available = [l for l in listings if l.availability != &#39;Out of Stock&#39;]&#xa;    &#xa;    cheapest_per_company = {}&#xa;    for l in available:&#xa;        cid = l.company_id&#xa;        if cid not in cheapest_per_company or l.price &amp;lt; cheapest_per_company[cid].price:&#xa;            cheapest_per_company[cid] = l&#xa;    &#xa;    return list(cheapest_per_company.values())&#xa;```&#xa;&#xa;---&#xa;&#xa;## Frontend Display Notes&#xa;&#xa;- Show product details (name, image) from **Product** table.&#xa;- Show list of companies with their **cheapest available offers** (price, availability, buy link).&#xa;- Allow users to click the buy link for the best offer per company.&#xa;&#xa;---&#xa;&#xa;## Image URLs (examples)&#xa;&#xa;- Amazon logo: https://upload.wikimedia.org/wikipedia/commons/a/a9/Amazon_logo.svg  &#xa;- Walmart logo: https://upload.wikimedia.org/wikipedia/commons/c/ca/Walmart_logo.svg  &#xa;- Best Buy logo: https://upload.wikimedia.org/wikipedia/commons/5/5a/Best_Buy_Logo.svg  &#xa;&#xa;---&#xa;&#xa;# End of Documentation" id="XJ4MXIWNUVhlBydrAuq2-49">
          <mxCell style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
            <mxGeometry x="-1280" y="20" width="560" height="2540" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="XJ4MXIWNUVhlBydrAuq2-26" value="" style="endArrow=none;html=1;rounded=0;entryX=0.995;entryY=0.167;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" target="XJ4MXIWNUVhlBydrAuq2-34" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="790" y="291" as="sourcePoint" />
            <mxPoint x="840" y="270" as="targetPoint" />
            <Array as="points" />
          </mxGeometry>
        </mxCell>
        <mxCell id="iHMuQG1dZHNGiIYbz37S-2" value="time_added" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="1090" y="220" width="100" height="70" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
